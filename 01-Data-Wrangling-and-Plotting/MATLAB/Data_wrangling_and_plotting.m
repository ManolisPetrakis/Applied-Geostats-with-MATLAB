%% Σύντομη εισαγωγή στη MATLAB(R)
% <html>
%   <h1>
%       Ανάγνωση αρχείων CSV, προεπεξεργασία δεδομένων, σχεδιασμός
%       στατιστικών διαγραμμάτων.
%   </h1>
% </html>
%
% Για τις ανάγκες του μαθήματος ΜΟΠ 511 "Εφαρμοσμένη Γεωστατιστική" 
% της σχολής Μηχανικών Ορυκτών Πόρων του Πολυτεχνείου Κρήτης.
%
% Μανώλης Πετράκης, Νοέμβριος 2018


%% Το σύνολο δεδομένων: Ποσοστό Καλίου στη γεώτρηση Mountain Home Well
% Θα εξετάσουμε ένα αρχείο μετρήσεων ποσοστού Καλίου κατά μήκος της γεώτρησης
% Mountain Home Well, από το Snake River Plain, Idaho. Οι μετρήσεις έγιναν στα
% πλαίσια του έργου HOTSPOT που είχε στόχο να αξιολογήσει το γεωθερμικό
% δυναμικό του Snake River Plain. *Προσοχή!* Τα δεδομένα παρέχονται από τον
% συνεργάτη του προγράμματος Doug Schmitt, του Πανεπιστημίου της Αλμπέρτα, με άδεια
% <https://creativecommons.org/licenses/by/4.0/ Creative Commons Attribution 4.0>.
% Μπορείτε να βρείτε περισσότερες πληροφορίες στους συνδέσμους:
%
% * <https://openei.org/doe-opendata/dataset/mountain-home-well-borehole-geophysics-database Η βάση δεδομένων>
% * <https://gdr.openei.org/submissions/289 Φωτογραφίες από το πεδίο>
% * <https://en.wikipedia.org/wiki/Gamma_ray_logging Gamma-ray logging>
%
% Το αρχείο είναι της μορφής CSV (Comma-Separated Values, κατάληξη .csv),
% δηλαδή είναι ένα απλό αρχείο κειμένου με τιμές που διαχωρίζονται με κόμματα.
% Πρόκειται για το αρχείο |Mountain_Home_K.csv|, που δημιουργήθηκε με το
% λογισμικό <https://www.rockware.com/product/wellcad/ WellCAD>.


%% Ανάγνωση του .csv αρχείου (the data scientist's way)

data_table = readtable('../datasets/Mountain_Home_K.csv');

%%
% Με τη (|readtable|) διαβάσαμε το αρχείο |Mountain_Home_K.csv| που βρίσκεται
% στο φάκελο |datasets| ο οποίος με τη σειρά του βρίσκεται ένα φάκελο πίσω (|..|)
% από τον φάκελο στον οποίο δουλεύουμε.
% Δεν είναι απαραίτητο να χρησιμοποιείτε την ίδια δομή στους φακέλους σας.
% Αν και δεν είναι καλό να έχετε κώδικα, δεδομένα και αποτελέσματα στον ίδιο φάκελο,
% μπορείτε νε έχετε το αρχείο |Mountain_Home_K.csv| στον ίδιο φάκελο με τον κώδικά
% σας, και να το διαβάσετε με την εντολή |data_table = readtable('Mountain_Home_K.csv');|.
%
% Αποθηκεύουμε τα περιεχόμενα του |Mountain_Home_K.csv| στη μεταβλητή |data_table|
% η οποία είναι <https://www.mathworks.com/help/matlab/data-types.html τύπου> 
% table και όχι πίνακα. Ο τύπος table είναι χρήσιμος για δεδομένα μικτού
% τύπου, τα οποία έχουν δομή παρόμοια με ενός φύλλου εργασίας Excel(R).
%
% *Protip: Πατώντας |F1| και έχοντας επιλέξει μια εντολή της MATLAB(R) στον Editor
% ή στο Command Window παίρνουμε βοήθεια για την εντολή.*

summary(data_table)

%%
% Η |summary| μας δίνει μια περίληψη για το τι περιέχει μια μεταβλητή τύπου
% |table|. Βλέπουμε ότι η μεταβλητή |data_table| περιέχει δύο διανύσματα,
% τα |Depth| και |K| (το σύμβολο για το χημικό στοιχείο Κάλιο, _Kallium_
% στα λατινικά) τα οποία είναι τύπου cell με χαρακτήρες και μήκος 10533 το καθένα.

%%
% Για να δούμε τι περιέχουν οι πρώτες 10 γραμμές της |data_table|.
% "Επέστρεψέ μου από την |data_table| τις γραμμές από 1 έως 10 (|1:10|) και
% *όλες* τις στήλες (|:|)":

data_table(1:10, :)

%%
% Η |readtable| έχει διαβάσει τη δεύτερη γραμμή ως μέτρηση, ενώ στη
% πραγματικότητα η δεύτερη γραμμή περιέχει τις μονάδες μέτρησης των στηλών.
% Επίσης, η πρώτη μέτρηση φαίνεται ύποπτη, γιατί έχει αρνητική τιμή.
%
% Για να δούμε τις τελευταίες 10 γραμμές. "Επέστρεψέ μου τις γραμμές από
% τη 10η πριν το τέλος μέχρι και την τελευταία (|end-9:end|) και *όλες* τις
% στήλες (|:|):

data_table(end-9:end, :)

%%
% * Η |end| είναι μια συντομογραφία για το τελευταίο στοιχείο.
% * *Προσοχή!* To |end-9| είναι το _δέκατο_ πριν το τέλος στοιχείο.
%
% Παρατηρούμε ότι υπάρχουν μετρήσεις με τιμή _ακριβώς_ μηδέν.
%
% Τώρα που έχουμε μια εικόνα για το τι περιέχει το αρχείο μας, ας δουλέψουμε
% με πίνακες, μιας και το σύνολο δεδομένων μας έχει την δομή ενός 10532 επί 2 πίνακα.


%% Ανάγνωση του .csv αρχείου (the mathematician's way)

data_matrix = csvread('../datasets/Mountain_Home_K.csv', 2);

%%
% Με την εντολή |csvread| διαβάζουμε αρχεία CSV τα οποία περιέχουν
% αποκλειστικά αριθμούς, με εξαίρεση κάποιες γραμμές κειμένου στην αρχή, οι οποίες
% (αν είμαστε τυχεροί!) περιέχουν πληροφορία για τα ονόματα των μεταβλητών και τις
% μονάδες τους. Η ύπαρξη γραμμών κειμένου με πληροφορίες για το περιεχόμενο του
% αρχείου μετρήσεων είναι μια πρακτική η οποία επιβάλλεται να την ακολουθείτε και
% εσείς όταν καταγράφετε μετρήσεις.
% 
% Το πρώτο όρισμα της |csvread| είναι η τοποθεσία του αρχείου, ενώ το δεύτερο
% όρισμα είναι ο αριθμός των γραμμών που θέλουμε η
% |csvread| να αγνοήσει από την αρχή του εν λόγω αρχείου.
% Δεν θα διαβάσουμε τις 2 πρώτες γραμμές, μιας και η πρώτη περιέχει το τι είναι η
% κάθε στήλη, ενώ η δεύτερη περιέχει τις μονάδες μέτρησης.
% Αποθηκεύουμε την έξοδο της |csvread| στη μεταβλητή
% |data_matrix| η οποία είναι πίνακας 10532 γραμμών επί 2 στήλες:

data_matrix(1:10, :)
size(data_matrix)

%%
% * Η |size| επιστρέφει τις διαστάσεις του πίνακα.
%
% *Δεν ξεχνάω ότι η πρώτη στήλη είναι το βάθος σε m ενώ η δεύτερη στήλη
% είναι το ποσοστό (%) Καλίου.*
%
% Τώρα είμαστε έτοιμοι για το πρώτο μας γράφημα.


%% Το πρώτο μας γράφημα
% Στη συνέχεια, αν και δεν είναι απαραίτητο, δίνουμε στη μεταβλητή 
% |depth| τις τιμές της πρώτης στήλης του |data_matrix|, και στη
% μεταβλητή |Κ| τις τιμές της δεύτερης στήλης του |data_matrix|:

depth = data_matrix(:, 1);
K = data_matrix(:, 2);

%%
% * Θα μπορούσαμε να είχαμε γράψει και |K = data_matrix(:, end);|.
%
% Η i-οστή γραμμή του |Κ| έχει τη μέτρηση του ποσοστού
% Καλίου που έγινε σε βάθος ίσο με την i-οστή γραμμή της |depth|. Τώρα
% είμαστε έτοιμοι για το πρώτο μας γράφημα:

figure
plot(depth, K)
xlabel('Depth (m)')
ylabel('Potassium (%)')

%%
% * Φτιάχνουμε ένα σχήμα σε νέο παράθυρο με τη |figure|.
% * Σχεδιάζουμε τα στοιχεία του |depth| ως προς τα στοιχεία του |Κ| με τη
% |plot|.
% * Δίνουμε τίτλους στον οριζόντιο (x) και κατακόρυφο (y) άξονα με τις
% |xlim| και |ylim| αντίστοιχα.
%
% Ωχ, κάτι φαίνεται να μην πηγαίνει καλά! Πως μπορεί να έχουμε τόσο μεγάλες
% αρνητικές τιμές; Τι μπορούμε να κάνουμε γιαυτό; Θα το απαντήσουμε σε λίγο.
% Αν περιορίσουμε τον κατακόρυφο άξονα στο διάστημα [0, 5] έχουμε το ακόλουθο
% γράφημα: 

figure
plot(depth, K)
xlabel('Depth (m)')
ylabel('Potassium (%)')
ylim([0, 5])

%%
% * Χρησιμοποιήσαμε την |ylim| με όρισμα τα όρια του κατακόρυφου άξονα
% σε μορφή διανύσματος |[y_min, y_max]|.


%% Προετοιμασία δεδομένων για στατιστική ανάλυση
% Μπορούμε να αγνοήσουμε τις "προβληματικές" τιμές, αφαιρώντας τις από το
% σύνολο δεδομένων. Μια τέτοιου είδους απλοϊκή αντιμετώπιση είναι εφικτή
% γιατί στο σύνολό μας έχουμε αρκετές μετρήσεις. Στη πράξη, και κυρίως όταν
% το πλήθος των μετρήσεων είναι μικρό, χρειάζεται προσοχή στο πως
% αντιμετωπίζουμε "προβληματικές" τιμές. Μια άλλη λύση θα ήταν η
% αντικατάσταση των προβληματικών τιμών με το αποτέλεσμα μιας μεθόδου
% παρεμβολής, υπολογισμένο στις προβληματικές θέσεις. 
%
% Ας βρούμε τις γραμμές (δείκτες) στις οποίες έχουμε μη-αρνητικό ποσοστό Καλίου:

accepted_rows = (K >= 0);

%%
% Τι κάναμε εδώ;
%
% * Με την |K>=0| παίρνουμε ένα διάνυσμα τύπου logical με τιμές 0 ή 1. Αν
% το i-οστό στοιχείο του |K| ικανοποιεί την ανισότητα, το i-οστό στοιχείο
% του διανύσματος τύπου logical παίρνει τη τιμή 1 (true, αληθές),
% αλλιώς παίρνει τη τιμή 0 (false, ψευδές).
% * Οι παρενθέσεις μπαίνουν για σαφήνεια.
% * Το αποτέλεσμα της λογικής πράξης αποθηκεύεται στο διάνυσμα
% |accepted_rows| που είναι τύπου logical.

%%
% Πόσες γραμμές είναι αποδεκτές;
sum(accepted_rows)

%%
% * Αθροίζω τα στοιχεία του διανύσματος |accepted_rows|. Εφόσον αυτό
% περιέχει 0 και 1, το άθροισμα είναι ίσο με το πλήθος των γραμμών που
% ικανοποιούν την ανισότητα αποδοχής.

nnz(accepted_rows)

%%
% * Η `nnz` επιστρέφει τον αριθμό των μη-μηδενικών στοιχείων του ορίσματός της.
%
% Πόσες γραμμές είναι μη-αποδεκτές;
rejected_rows = ~accepted_rows;
sum(rejected_rows)

%%
% * Ο τελεστής |~| (τίλντα) επιστρέφει ένα διάνυσμα τύπου logical που περιέχει 1
% στη θέση όπου η |accepted_rows| περιέχει 0, και 0 εκεί όπου |accepted_rows|
% _δεν_ περιέχει 0. 

%%
% Sanity check: Η μεγαλύτερη διάσταση του πίνακα |data_matrix|, που είναι
% ίση με τον αριθμό των γραμμών, άρα και των μετρήσεων, _μείον_ τον αριθμό
% τον γραμμών που περιέχουν έγκυρες μετρήσεις, θα πρέπει να είναι _ίσες_ με
% τον αριθμό των γραμμών που απορρίψαμε. Είναι;

length(data_matrix) - sum(accepted_rows) == sum(rejected_rows)

%%
% Ναι!
%
% * Τα διπλά ίσον |==| είναι ο τελεστής ελέγχου ισότητας. Επιστρέφει 1 (true) αν η
% ισότητα επαληθεύεται. Το μονό ίσον |=| είναι ο τελεστής εκχώρησης!

%%
% Ας κρατήσουμε μονάχα τις έγκυρες μετρήσεις:

depth_accepted = depth(accepted_rows);
K_accepted = K(accepted_rows);

%%
% * Ένα διάνυσμα τύπου logical (όπως το |accepted_rows|) όταν δοθεί ως
% όρισμα σε ένα διάνυσμα (όπως το |depth|), επιστρέφει τα στοιχεία από τις
% θέσεις στις οποίες το διάνυσμα τύπου |logical| είναι αληθές.
%
% Σε αυτή την ενότητα είδαμε λίγη από τη μαγεία της MATLAB(R)!
% Ο προγραμματισμός κατ' αυτόν τον τρόπο στη MATLAB(R) αποτελεί καλή πρακτική.

%%
% Έχοντας αφαιρέσει τις γραμμές οι οποίες είχαν προβληματικές τιμές,
% ας ξανασχεδιάσουμε το ποσοστό Καλίου σε σχέση με το βάθος:

figure
plot(depth_accepted, K_accepted)
xlabel('Depth (m)')
ylabel('Potassium (%)')


%% Το πρώτο μας ιστόγραμμα και η πρώτη μας βασική στατιστική ανάλυση

figure
hist(K_accepted, 100)
xlabel('Potassium (%)')
ylabel('Count')

%%
% Η |hist| δέχεται ως πρώτο όρισμα ένα διάνυσμα (εδώ το |K|), και
% προαιρετικά τον αριθμό των ισομηκών διαστημάτων ("κουτιών", εδώ 100) στα οποία
% θέλουμε να καταταγούν τα στοιχεία του διανύσματος.
%
% Ας υπολογίσουμε την ελάχιστη (|min|) και μέγιστη (|max|) τιμη του |K_accepted|

min(K_accepted)
max(K_accepted)

%%
% Ας υπολογίσουμε τη μέση τιμή (|mean|), διάμεσο (|median|), και τη
% συχνότερη τιμή (|mode|):

mean(K_accepted)
median(K_accepted)
mode(K_accepted)

%%
% _Ερώτηση:_
%
% * Σε ποια σημεία του ιστογράμματος (και γιατί) βρίσκονται οι παραπάνω τιμές;  
%
% Πόσα μηδενικά έχουν οι μετρήσεις μας;
sum(K_accepted==0)

%%
% _Ερώτηση:_
% 
% * Γιατί η συχνότερη τιμή δεν αντιστοιχεί με την κορυφή του ιστογράμματος;
%
% Ας κρατήσουμε τις μετρήσεις που έχουν γίνει σε βάθος μικρότερο των 730 m:

less_than_730m = (depth_accepted < 730);
depth_730 = depth_accepted(less_than_730m);
K_730 = K_accepted(less_than_730m);

%%
% Πόσες μετρήσεις κρατήσαμε;

size(K_730)

%%
% Ο |Κ_730| έχει 1109 γραμμές (που αντιστοιχούν σε 1109 μετρήσεις) και 1 στήλη.
% Ας σχεδιάσουμε το ποσοστό Καλίου για βάθη μέχρι 730 μέτρα:

figure
plot(depth_730, K_730)
xlabel('Depth (m)')
ylabel('Potassium (%)')

%%
% Ας σχεδιάσουμε ένα ιστόγραμμα μαζί με προσαρμογή μιας κανονικής (normal, ή
% γκαουσιανής, gaussian) κατανομής. Να σας υπενθυμίσω την _πυκνότητα_
% πιθανότητας της κανονικής κατανομής
% (που όλοι αγαπάμε) με μέση τιμή $\mu$ και διασπορά $\sigma^2$:
%
% $$p(x; \mu, \sigma) = \frac{1}{\sigma\sqrt{2\pi}} e^{-{\frac{(x-\mu)^2}{2\sigma^2}}}$$

figure
histfit(K_730)
xlabel('Potassium (%) for depth < 730m');
ylabel('Count')

%%
% * Η |histfit| σχεδιάζει ένα ιστόγραμμα με αριθμό κουτιών ίσο με την
% τετραγωνική ρίζα του πλήθους των στοιχείων του ορίσματος, προσαρμόζει
% μια κανονική κατανομή, και τη σχεδιάζει μαζί με το ιστόγραμμα.
%
% _Bonus points:_
%
% * Είναι όντως _πυκνότητα_ πιθανότητας η συνεχής καμπύλη του διαγράμματος; 

%%
% Το _γράφημα κανονικής πιθανότητας_ μας βοηθάει να αξιολογήσουμε οπτικά
% αν τα δεδομένα προέρχονται από έναν πληθυσμό με κανονική κατανομή:

figure
normplot(K_730)
xlabel('Potassium (%) for depth < 730m')

%%
% * Η |normplot| σχεδιάζει το γράφημα κανονικής πιθανότητας.
% * Αν οι μετρήσεις (με σταυρό (+) στο γράφημα) είναι πάνω στη γραμμή,
% προέρχονται από έναν πληθυσμό με κανονική κατανομή.
%
% Οι μετρήσεις ποσοστού Καλίου για βάθη < 730m φαίνεται να είναι
% _σατανικά κοντά_ &#128520; στη κανονική κατανομή!


%% Αποθήκευση πινάκων MATLAB(R) σε αρχείο
% Ας αποθηκεύσουμε τα δεδομένα που προεπεξεργαστήκαμε σε μορφή πίνακα
% MATLAB(R) για μελλοντική ανάλυση:

mountain_home_K = [depth_accepted, K_accepted];
save('../exports/Mountain_Home_K', 'mountain_home_K')

%%
% * Ορίζουμε τον πίνακα |mountain_home_K| με δύο στήλες, τις τιμές του βάθους
% και το ποσοστό Καλίου.
% * Πάμε ένα φάκελο πίσω (|..|) και αποθηκεύουμε τον πίνακα |mountain_home_K|
% στο αρχείο |Mountain_Home_K_small| το οποίο (αυτόματα) θα έχει κατάληξη
% |.mat|, και έχει μορφή αναγνωρίσιμη από τη MATLAB(R). 
%
% Τελειώνουμε με την αποθήκευση του μικρότερο συνόλου μετρήσεων:

mountain_home_K_small = [depth_730, K_730];
save('../exports/Mountain_Home_K_small', 'mountain_home_K_small')

%%
% Πριν κλείσουμε, θα ήθελα να θυμόσαστε τα ακόλουθα, τα οποία ίσως είναι
% σημαντικότερα από το πως συντάσσονται συγκεκριμένες εντολές της
% MATLAB(R), το οποίο σίγουρα θα το ξεχάσετε με τον καιρό. 


%% Καλές πρακτικές προγραμματισμού και ανάλυσης δεδομένων
% Τα μικροπροβλήματα που παρουσιάστηκαν κατά την ανάγνωση των δεδομένων είναι πολύ
% συνηθισμένα όταν πρόκειται να διαχειριστούμε πραγματικά δεδομένα που προέρχονται
% από διάφορες πηγές. Η διαδικασία μετατροπής πρωτογενών δεδομένων σε επεξεργάσιμη
% μορφή λέγεται <https://en.wikipedia.org/wiki/Data_wrangling data wrangling>.
% Αν σας ενδιαφέρει η ανάλυση δεδομένων γενικότερα, καλό θα ήταν να ρίξετε
% μια ματιά στα εργαλεία που προσφέρουν γλώσσες όπως η Python ή η R, και αποτελούν
% ελεύθερο λογισμικό, σε αντίθεση με τη MATLAB(R). Η MATLAB(R) ξεκίνησε ως
% υπολογιστικό περιβάλλον με δυνατότητες γραμμικής άλγεβρας και σχεδιασμού
% γραφημάτων, έχοντας ως αγοραστικό κοινό (μεταξύ άλλων) ανθρώπους που δεν
% ήθελαν να προγραμματίζουν σε FORTRAN.
% 
% Είναι προτιμητέο στη MATLAB(R) να δουλεύουμε με δεδομένα τακτοποιημένα σε
% μορφή πινάκων (του ίδιου τύπου, χωρίς κενά και μη-αποδεκτές τιμές)
% για λόγους απόδοσης και συμβατότητας, μιας και εργαλεία για επεξεργασία
% ετερογενών δεδομένων είναι διαθέσιμα μονάχα στις πιο πρόσφατες εκδόσεις.
% Επίσης, είναι καλή πρακτική, στη περίπτωση που αποθηκεύουμε δεδομένα,
% να συνοδεύουμε τα δεδομένα με σαφείς οδηγίες για το περιεχόμενο των αρχείων,
% όπως και οδηγίες ανάγνωσής τους. Ο χρήστης (που μπορεί να είστε εσείς μετά
% από 6 μήνες και να μη θυμάστε τι και πως το έχετε αποθηκεύσει) θα πρέπει
% να γνωρίζει σε τι αντιστοιχούν οι γραμμές και οι στήλες του αρχείου,
% τις μονάδες τους, και το τι σημαίνουν "μη-κανονικές" τιμές, όπως π.χ.
% |-999|, |NaN|, |Inf| ή μηδενικά (σε περιπτώσεις που η μετρούμενη ποσότητα
% δεν μπορεί να είναι μηδέν).
%
% Φροντίζουμε ώστε τα ονόματα των μεταβλητών και των αρχείων μας να
% είναι σαφή και περιγραφικά. Δεν χρειάζεται να κάνουμε οικονομία στο
% μέγεθός τους. Περισσότερες καλές πρακτικές συγγραφής κώδικα MATLAB(R) θα βρείτε
% στους ακόλουθους συνδέσμους:
%
% * <https://erikreinertsen.com/matlab-style-guide/ Matlab style guide>.
% * <https://www.cambridge.org/core/books/elements-of-matlab-style/8825411CE69013434DB0939780CFD907 The Elements of MATLAB Style> (βιβλίο).
% * <https://www.mathworks.com/matlabcentral/fileexchange/45047-matlab-style-guidelines-cheat-sheet?focused=bb5d423a-49d8-424e-a4d8-794869ba858e&tab=example Matlab Style Guidelines Cheat Sheet> (βασισμένο στο παραπάνω βιβλίο).
%
% Χρησιμοποιούμε τα εργαλεία για τα οποία φημίζεται η κάθε γλώσσα προγραμματισμού,
% ειδάλλως δεν θα είχε νόημα να χρησιμοποιούμε τη συγκεκριμένη γλώσσα.
% Είδαμε με πόσο κομψό και λιτό τρόπο μπορούμε να διαχειριζόμαστε πίνακες
% στη MATLAB(R) δουλεύοντας με δείκτες. Οι γλώσσες προγραμματισμού είναι όπως
% τα εργαλεία σε ένα συνεργείο: διαλέγουμε την καταλληλότερη γλώσσα για το
% πρόβλημα που έχουμε να λύσουμε. Αυτό σημαίνει ότι η MATLAB(R) δεν είναι
% πάντα καλή επιλογή. Στη σημερινή αγορά εργασίας είναι δύσκολο να επιβιώσει
% κάποιος κατέχοντας μονάχα μια γλώσσα προγραμματισμού ή μονάχα ένα
% υπολογιστικό πακέτο.


%% Τι μάθαμε σε αυτό το μάθημα
% * Ανάγνωση αρχείων μορφής CSV.
% * Σχεδιασμό γραφημάτων.
% * Προετοιμασία δεδομένων για ανάλυση.
% * Ιστόγραμμα, ιστόγραμμα με προσαρμογή καμπύλης κανονικής κατανομής,
%   γράφημα κανονικής πιθανότητας.
% * Αποθήκευση πινάκων MATLAB(R) σε αρχείο.
% * Μερικές καλές πρακτικές προγραμματισμού και ανάλυσης δεδομένων.